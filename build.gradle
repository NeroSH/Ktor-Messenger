buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

plugins {
    id 'edu.sc.seis.launch4j' version '2.4.9'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
}


apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.github.johnrengelman.shadow'
group 'ru.anvarov'
version '0.0.1'
mainClassName = 'ru.anvarov.ClientKt'


/*
// Launch4j - windows exe builder config
createExe {
    outfile = 'Main.exe'
    mainClassName = 'ru.anvarov.MainKt'
    productName = 'main'
    jar='libs/${artifactId}-${version}-SNAPSHOT.jar'
//    jar = 'build/libs/main-1.0-SNAPSHOT.jar'
//    jar='libs/${artifactId}-${version}-shaded.jar'
//    copyConfigurable = []
}
//sourceSets.main.java.srcDirs = ['src/main/kotlin']

jar {
// This line of code recursively collects and copies all of a project's files
// and adds them to the JAR itself. One can extend this task, to skip certain
// files or particular types at will
    from {
        String[] include = [
                "kotlin-runtime-1.4.10.jar",
                "kotlin-stdlib-1.4.10.jar"

        ]
        configurations.compileClasspath
                .findAll { include.contains(it.name) }
                .collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
        attributes 'Main-Class': mainClassName + "Kt"
    }

}
*/

shadowJar {
    manifest {
        attributes 'Main-Class' : mainClassName
    }
}

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    jcenter()
//    maven { url 'https://kotlin.bintray.com/ktor' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-websockets:$ktor_version"
    implementation "io.ktor:ktor-network:$ktor_version"

    implementation "com.google.code.gson:gson:2.8.5"
    // Kotlin serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:1.0.1"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.0.1"
    // Kotlin coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1'

    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}
